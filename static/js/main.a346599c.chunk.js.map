{"version":3,"sources":["components/styles/navbar.module.scss","components/Head.js","components/Navbar.js","components/Info.js","components/Schedule.js","components/Spacer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navbar","navbar__items","navbar__item","burger","slide-up","visible","slide-down","Head","title","headContent","subtitle","date","react_default","a","createElement","className","CountdownTimer","startDate","src","alt","clouds","arr","Array","apply","length","map","_","i","key","concat","Math","floor","random","console","log","createClouds","_ref","_useState","useState","Date","_useState2","Object","slicedToArray","timeLeft","tick","useEffect","intervalId","setInterval","clearInterval","distance","getTime","days","hours","minutes","seconds","parseTimeValues","Navbar","_classnames","navmenuVisible","setNavmenuVisible","classes","classnames","defineProperty","styles","onClick","href","Info","infoContent","content","id","Schedule","Spacer","App","Component","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a346599c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__2dJ0D\",\"navbar__items\":\"navbar_navbar__items__iEzQy\",\"navbar__item\":\"navbar_navbar__item__2guao\",\"burger\":\"navbar_burger__2oIrO\",\"slide-up\":\"navbar_slide-up__1Z5CN\",\"visible\":\"navbar_visible__2xfYW\",\"slide-down\":\"navbar_slide-down__3gVhG\"};","import React, { useState, useEffect } from 'react'\nimport headContent from '../content/hero.json'\nimport './styles/head.scss'\n\nexport default function Head () {\n  const { title, subtitle, date } = headContent\n\n  const createClouds = () => {\n    const clouds = ['cloud.png', 'cloud2.png']\n    const arr = Array.apply(null, { length: 8 }).map((_, i) => (\n      <img\n        key={i}\n        src={`/img/${clouds[Math.floor(Math.random() * 2)]}`}\n        alt=\"\"\n        className={`head-cloud c${i + 1} cloud-translate`}\n      />\n    ))\n    console.log(arr)\n    return arr\n  }\n\n  return (\n    <div className=\"hero-content\">\n      <div className=\"hero-content-wrapper\">\n        <h1 className=\"hero-title\">{title}</h1>\n        <h2 className=\"hero-subtitle\">{subtitle}</h2>\n        <CountdownTimer startDate={date} />\n        <img\n          src=\"/img/isovitunkirkko.png\"\n          alt=\"\"\n          className=\"head-isovitunkirkko\"\n        />\n        {createClouds()}\n      </div>\n    </div>\n  )\n}\n\nfunction CountdownTimer ({ startDate }) {\n  const [timeLeft, tick] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => tick(new Date()), 1000)\n    return () => clearInterval(intervalId)\n  })\n  console.log(timeLeft)\n\n  const parseTimeValues = (date) => {\n    const distance = new Date(startDate).getTime() - date.getTime()\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24))\n    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000)\n\n    return distance > 0 ? `${days} päivää, ${hours} tuntia, ${minutes} minuuttia, ${seconds} sekunttia` : 'OHI ON!'\n  }\n\n  return (\n    <h3 className=\"hero-subtitle countdown\">{parseTimeValues(timeLeft)}</h3>\n  )\n}\n","import React, { useState } from 'react'\nimport styles from './styles/navbar.module.scss'\nimport classnames from 'classnames'\n\nexport default function Navbar () {\n  const [navmenuVisible, setNavmenuVisible] = useState(false)\n  const classes = classnames({\n    [styles['navbar__items']]: true,\n    [styles.visible]: navmenuVisible\n  })\n\n  return (\n    <div className={styles.navbar}>\n      <ul className={classes}>\n        <li className={styles['navbar__item']}>\n          <a onClick={() => setNavmenuVisible(false)} href=\"#home\">etusivu</a>\n        </li>\n        <li className={styles['navbar__item']}>\n          <a onClick={() => setNavmenuVisible(false)} href=\"#info\">yleisinfo</a>\n        </li>\n      </ul>\n\n      <div\n        onClick={() => setNavmenuVisible(!navmenuVisible)}\n        className={styles.burger}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport infoContent from '../content/info.json'\nimport './styles/content.scss'\n\nexport default function Info () {\n  const { title, content } = infoContent\n  return (\n    <div id=\"info\" className=\"content\">\n      <div className=\"content-title-box\">\n        <h1 className=\"title-text\">{title}</h1>\n      </div>\n      <div className=\"content-content-box\">\n        <div className=\"content-text-wrapper\">\n          <p className=\"content-text\">{content}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './styles/content.scss'\n\nexport default function Schedule () {\n  return (\n    <div id=\"schedule\" className=\"content\">\n      <div className=\"content-content-box inverted\">\n        <div className=\"content-text-wrapper\">\n          <p className=\"content-text\">TBA</p>\n        </div>\n      </div>\n\n      <div className=\"content-title-box inverted\">\n        <h1 className=\"title-text\">aikataulu</h1>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './styles/spacer.scss'\n\nexport default function Spacer () {\n  return (\n    <div className=\"spanner-container\">\n      <p className=\"marquee\">\n        <span>TKO-äly Linkki Skripti TiTol Asteriski Serveri Luuppi</span>\n      </p>\n      <p className=\"marquee marquee2\">\n        <span>TKO-äly Linkki Skripti TiTol Asteriski Serveri Luuppi</span>\n      </p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport Head from './components/Head'\nimport Navbar from './components/Navbar'\nimport './App.scss'\nimport Info from './components/Info'\nimport Schedule from './components/Schedule'\nimport Spacer from './components/Spacer'\n\nclass App extends Component {\n  render () {\n    return (\n      <div id=\"home\" className=\"App\">\n        <Navbar />\n        <Head />\n        <Info />\n        <Spacer />\n        <Schedule />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { render } from 'react-snapshot'\n\nrender(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}